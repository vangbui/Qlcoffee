/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Gui;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class QLSanPham extends javax.swing.JFrame {
   DefaultTableModel tblModelSP, tblModelLoaiSP;
    DefaultComboBoxModel cbModelSP, cbModelLoaiSP;
    Connection conSP, conLoaiSP;
    ResultSet rsSP, rsLoaiSP, rsIDPr, rsTen, rsTK, rsAdd1;
    PreparedStatement psSP, psLoaiSP, psSP1, psTen, psTK, psAdd1, psAdd2;
    Vector rowSP, rowLoaiSP, vecTK, vecTen, rowTen;
    private int[] sponsorIndexArr;
    List<String> lsTenLSP = new ArrayList<>();
    List<String> lsTensp = new ArrayList<>();
    List<String> lsTenlsp = new ArrayList<>();
    
    /**
     * Creates new form QLSanPham
     */
    public QLSanPham() {
        initComponents();
        tblModelSP = new DefaultTableModel();
        tblModelSP.addColumn("Mã Sản Phẩm");
        tblModelSP.addColumn("Tên Sản Phẩm");
        tblModelSP.addColumn("Mã Loại Sản Phẩm");
        tblModelSP.addColumn("Giá Bán");
        tblModelSP.addColumn("Kích Thước");
        j_sanpham.setModel(tblModelSP);
        loadDataSP();

        tblModelLoaiSP = new DefaultTableModel();
        tblModelLoaiSP.addColumn("Mã Loại Sản Phẩm");
        tblModelLoaiSP.addColumn(" Tên Loại Sản Phẩm");
        tblModelLoaiSP.addColumn("Kích Thước");
        j_lsp.setModel(tblModelLoaiSP);
        loadDataLoaiSP();
        bt_tk.setVisible(false);
        cb_ten.setVisible(false);
        pannel_timkiem.setVisible(false);
    }
    private void loadDataSP() {
        try {
            conSP = DriverManager.getConnection("jdbc:mysql://localhost:3306/qlqcf", "root", "2509");
            String sql = "select * from qlqcf.sanpham inner join qlqcf.loaisanpham on sanpham.MaLSP=loaisanpham.MaLSP";
            psSP = conSP.prepareStatement(sql);
            rsSP = psSP.executeQuery();
            while (rsSP.next()) {
                rowSP = new Vector();
                rowSP.add(rsSP.getString("MaSP"));
                rowSP.add(rsSP.getString("TenSP"));
                rowSP.add(rsSP.getString("MaLSP"));
                rowSP.add(rsSP.getString("GíaSP"));
                rowSP.add(rsSP.getString("KichThuoc"));
                tblModelSP.addRow(rowSP);
            }
            j_sanpham.setModel(tblModelSP);
        } catch (Exception e) {
        }
        cb_tenlsp.removeAllItems();
        lsTenLSP.add("Cà phê");
        lsTenLSP.add("Nước trái cây");
        cb_tenlsp.removeAllItems();
        for(String tenLsp: lsTenLSP){
            cb_tenlsp.addItem(tenLsp);
        }
    }
    private void loadDataLoaiSP() {
        try {
            conLoaiSP = DriverManager.getConnection("jdbc:mysql://localhost:3306/qlqcf", "root", "2509");
            String sql = "select * from qlqcf.loaisanpham";
            psLoaiSP = conLoaiSP.prepareStatement(sql);
            rsLoaiSP = psLoaiSP.executeQuery();
            while (rsLoaiSP.next()) {
                rowLoaiSP = new Vector();
                rowLoaiSP.add(rsLoaiSP.getString(1));
                rowLoaiSP.add(rsLoaiSP.getString(2));
                rowLoaiSP.add(rsLoaiSP.getString(3));
                tblModelLoaiSP.addRow(rowLoaiSP);
            }
            j_lsp.setModel(tblModelLoaiSP);
        } catch (Exception e) {
        }
    }
   
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tf_malsp = new javax.swing.JTextField();
        tf_tenlsp = new javax.swing.JTextField();
        bt_luu = new javax.swing.JButton();
        bt_Sua = new javax.swing.JButton();
        bt_xoa = new javax.swing.JButton();
        bt_lammoi = new javax.swing.JButton();
        cb_kichthuoc = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        j_lsp = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        tf_masp = new javax.swing.JTextField();
        tf_tensp = new javax.swing.JTextField();
        tf_giaban = new javax.swing.JTextField();
        jcb_kichthuoc = new javax.swing.JComboBox<>();
        bt_tk = new javax.swing.JButton();
        bt_themsp = new javax.swing.JButton();
        bt_suasp = new javax.swing.JButton();
        bt_Xoasp = new javax.swing.JButton();
        bt_lmsp = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        j_sanpham = new javax.swing.JTable();
        cb_chontk = new javax.swing.JComboBox<>();
        pannel_timkiem = new javax.swing.JPanel();
        cb_ten = new javax.swing.JComboBox<>();
        lb_giatu = new javax.swing.JLabel();
        lb_giaden = new javax.swing.JLabel();
        lb_nhom = new javax.swing.JLabel();
        lb_kt = new javax.swing.JLabel();
        tf_giatu = new javax.swing.JTextField();
        tf_giaden = new javax.swing.JTextField();
        cb_loai = new javax.swing.JComboBox<>();
        cb_kthuoc = new javax.swing.JComboBox<>();
        lb_vnd = new javax.swing.JLabel();
        lb_vnd1 = new javax.swing.JLabel();
        cb_tenlsp = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setForeground(new java.awt.Color(102, 153, 0));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 0, 204));
        jLabel2.setText("Mã Loại Sản Phẩm:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 0, 204));
        jLabel3.setText("Tên Loại Sản Phẩm:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 255));
        jLabel4.setText("Kích Thước:");

        bt_luu.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bt_luu.setForeground(new java.awt.Color(0, 204, 204));
        bt_luu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Save.jpg"))); // NOI18N
        bt_luu.setText("LƯU");
        bt_luu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_luuActionPerformed(evt);
            }
        });

        bt_Sua.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bt_Sua.setForeground(new java.awt.Color(0, 153, 153));
        bt_Sua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Edit.png"))); // NOI18N
        bt_Sua.setText("Sửa");
        bt_Sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_SuaActionPerformed(evt);
            }
        });

        bt_xoa.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bt_xoa.setForeground(new java.awt.Color(0, 153, 153));
        bt_xoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Delete.jpg"))); // NOI18N
        bt_xoa.setText("XÓA");
        bt_xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_xoaActionPerformed(evt);
            }
        });

        bt_lammoi.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bt_lammoi.setForeground(new java.awt.Color(0, 153, 153));
        bt_lammoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Cancel.jpg"))); // NOI18N
        bt_lammoi.setText("LÀM MỚI");
        bt_lammoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_lammoiActionPerformed(evt);
            }
        });

        cb_kichthuoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NHỎ", "VỪA", "LỚN" }));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 504, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 277, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        j_lsp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        j_lsp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                j_lspMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(j_lsp);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4))
                                .addGap(55, 55, 55)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cb_kichthuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_malsp, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_tenlsp, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(bt_luu)
                        .addGap(44, 44, 44)
                        .addComponent(bt_Sua, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(bt_xoa, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(bt_lammoi)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tf_malsp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tf_tenlsp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_kichthuoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_luu, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_lammoi, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_xoa, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_Sua, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 145, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("LOẠI SẢN PHẨM", jPanel1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("Mã Sản Phẩm: ");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setText("Tên Sản Phẩm:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 0, 0));
        jLabel6.setText("Tên Loại Sản Phẩm:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(204, 0, 51));
        jLabel7.setText("Gía Bán:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(204, 0, 0));
        jLabel8.setText("Kích Thước:");

        jcb_kichthuoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NHỎ", "VỪA", "LỚN" }));

        bt_tk.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bt_tk.setForeground(new java.awt.Color(51, 0, 255));
        bt_tk.setText("TÌM KIẾM");
        bt_tk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_tkActionPerformed(evt);
            }
        });

        bt_themsp.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bt_themsp.setForeground(new java.awt.Color(102, 102, 0));
        bt_themsp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Save.jpg"))); // NOI18N
        bt_themsp.setText("THÊM");
        bt_themsp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_themspActionPerformed(evt);
            }
        });

        bt_suasp.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bt_suasp.setForeground(new java.awt.Color(102, 102, 0));
        bt_suasp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Edit.png"))); // NOI18N
        bt_suasp.setText("SỬA");
        bt_suasp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_suaspActionPerformed(evt);
            }
        });

        bt_Xoasp.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bt_Xoasp.setForeground(new java.awt.Color(102, 102, 0));
        bt_Xoasp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Delete.jpg"))); // NOI18N
        bt_Xoasp.setText("XÓA");
        bt_Xoasp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_XoaspActionPerformed(evt);
            }
        });

        bt_lmsp.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bt_lmsp.setForeground(new java.awt.Color(102, 102, 0));
        bt_lmsp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Cancel.jpg"))); // NOI18N
        bt_lmsp.setText("LÀM MỚI");
        bt_lmsp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_lmspActionPerformed(evt);
            }
        });

        j_sanpham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        j_sanpham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                j_sanphamMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(j_sanpham);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 553, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        cb_chontk.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "item1", "Tên", "Giá", "Nhóm" }));
        cb_chontk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_chontkActionPerformed(evt);
            }
        });

        cb_ten.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lb_giatu.setText("Gía Từ:");

        lb_giaden.setText("Đến:");

        lb_nhom.setText("Nhóm:");

        lb_kt.setText("Kích Thước:");

        cb_loai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cb_kthuoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nhỏ", "Vừa", "Lớn" }));

        lb_vnd.setText("VNĐ");

        lb_vnd1.setText("VNĐ");

        javax.swing.GroupLayout pannel_timkiemLayout = new javax.swing.GroupLayout(pannel_timkiem);
        pannel_timkiem.setLayout(pannel_timkiemLayout);
        pannel_timkiemLayout.setHorizontalGroup(
            pannel_timkiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pannel_timkiemLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pannel_timkiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pannel_timkiemLayout.createSequentialGroup()
                        .addComponent(cb_ten, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 16, Short.MAX_VALUE))
                    .addGroup(pannel_timkiemLayout.createSequentialGroup()
                        .addGroup(pannel_timkiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lb_nhom)
                            .addGroup(pannel_timkiemLayout.createSequentialGroup()
                                .addGroup(pannel_timkiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lb_kt)
                                    .addComponent(lb_giaden)
                                    .addComponent(lb_giatu))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(pannel_timkiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cb_loai, javax.swing.GroupLayout.Alignment.TRAILING, 0, 81, Short.MAX_VALUE)
                                    .addComponent(cb_kthuoc, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tf_giaden, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(tf_giatu, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pannel_timkiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lb_vnd)
                            .addComponent(lb_vnd1))))
                .addContainerGap())
        );
        pannel_timkiemLayout.setVerticalGroup(
            pannel_timkiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pannel_timkiemLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cb_ten, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pannel_timkiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_giatu)
                    .addComponent(tf_giatu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(pannel_timkiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_giaden)
                    .addComponent(tf_giaden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pannel_timkiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_nhom)
                    .addComponent(cb_loai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb_vnd))
                .addGap(18, 18, 18)
                .addGroup(pannel_timkiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pannel_timkiemLayout.createSequentialGroup()
                        .addGap(0, 1, Short.MAX_VALUE)
                        .addComponent(lb_kt))
                    .addGroup(pannel_timkiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cb_kthuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(lb_vnd1)))
                .addContainerGap())
        );

        cb_tenlsp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                                        .addComponent(tf_masp, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7))
                                        .addGap(31, 31, 31)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jcb_kichthuoc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(tf_tensp)
                                            .addComponent(tf_giaban)
                                            .addComponent(cb_tenlsp, 0, 133, Short.MAX_VALUE))))
                                .addGap(74, 74, 74)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cb_chontk, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(pannel_timkiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(bt_themsp, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(bt_suasp)
                        .addGap(63, 63, 63)
                        .addComponent(bt_Xoasp)
                        .addGap(52, 52, 52)
                        .addComponent(bt_lmsp)))
                .addContainerGap(36, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(bt_tk)
                .addGap(170, 170, 170))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tf_masp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_chontk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tf_tensp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(cb_tenlsp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jcb_kichthuoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(tf_giaban, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(pannel_timkiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(bt_tk, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bt_themsp, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bt_suasp, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bt_Xoasp, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bt_lmsp, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("SẢN PHẨM", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 663, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bt_luuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_luuActionPerformed
        int line = tblModelLoaiSP.getRowCount();
        int click = JOptionPane.showConfirmDialog(null, "Bạn có muốn thêm loại sản phẩm không?");
        if (click == 0) {
            try {
                while (true) {
                    for (int i = 0; i < line; i++) {
                        if (tf_malsp.getText().trim().equals(tblModelLoaiSP.getValueAt(i, 0))) {
                            JOptionPane.showMessageDialog(this, "Mã trùng");
                            tf_malsp.grabFocus();
                            return;
                        }
                    }
                    if (tf_malsp.getText().trim().equals("")) {
                        JOptionPane.showMessageDialog(this, "Mã không được để trống");
                        tf_malsp.grabFocus();
                        return;
                    } else if (!tf_malsp.getText().trim().matches("T[0-9]{2}")) {
                        JOptionPane.showMessageDialog(this, "Mã phải bắt đầu bằng chữ T và 2 số ");
                        tf_malsp.grabFocus();
                        return;
                    } else {
                        break;
                    }
                }

                while (true) {
                    String sql2 = "select * from qlqcf.loaisanpham";
                    psLoaiSP = conSP.prepareStatement(sql2);
//                psLoaiSP.setString(1, (String) cbNameType.getSelectedItem());
//                psLoaiSP.setString(2, (String) cbKichCo.getSelectedItem());
                    rsLoaiSP = psLoaiSP.executeQuery();
                    if (rsLoaiSP.next()) {
                        String idprotype = rsLoaiSP.getString(1);

                    }
                    for (int i = 0; i < line; i++) {
                        if (tf_tenlsp.getText().equals(tblModelLoaiSP.getValueAt(i, 1))
                                && (cb_kichthuoc.getSelectedItem().equals(tblModelLoaiSP.getValueAt(i, 2)))) {
                            JOptionPane.showMessageDialog(this, "Loại sản phẩm đã tồn tại");
                            tf_tenlsp.grabFocus();
                            return;
                        }
                    }

                    if (tf_tenlsp.getText().trim().equals("")) {
                        JOptionPane.showMessageDialog(this, "Tên không được để trống");
                        tf_tenlsp.grabFocus();
                        return;
                    } else {
                        break;
                    }
                }
                String sql = "insert into qlqcf.loaisanpham values(?,?,?)";
                psLoaiSP = conLoaiSP.prepareStatement(sql);
                psLoaiSP.setString(1, tf_masp.getText());
                psLoaiSP.setString(2, tf_tensp.getText());
                psLoaiSP.setString(3, (String) cb_kichthuoc.getSelectedItem());//cbBox
                psLoaiSP.executeUpdate();
                tblModelLoaiSP.getDataVector().removeAllElements();
                loadDataLoaiSP();
                 btnResetActionPerformed(null);
                JOptionPane.showMessageDialog(null, "Thêm loại sản phẩm thành công");
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_bt_luuActionPerformed

    private void bt_lammoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_lammoiActionPerformed
        tf_malsp.setText("");
        tf_tenlsp.setText("");
        cb_kichthuoc.setSelectedIndex(0);//re set combobox
        tf_malsp.setEnabled(true);
        bt_xoa.setEnabled(false);
        bt_Sua.setEnabled(false);
        bt_luu.setEnabled(true);
    }//GEN-LAST:event_bt_lammoiActionPerformed

    private void bt_xoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_xoaActionPerformed
       String xoa = "select * from qlqcf.sanpham where MaLSP=?";

        try {
            psLoaiSP = conLoaiSP.prepareStatement(xoa);
            psLoaiSP.setString(1, tf_malsp.getText());
            rsLoaiSP = psLoaiSP.executeQuery();
            if (!rsLoaiSP.next()) {
                int click = JOptionPane.showConfirmDialog(null, "Bạn có muốn xóa loại sản phẩm không?");
                if (click == 0) {
                    try {
                        String sql = "Delete qlqcf.loaisanpham where MaLSP=?";
                        psLoaiSP = conLoaiSP.prepareStatement(sql);
                        psLoaiSP.setString(1, tf_malsp.getText());
                        psLoaiSP.executeUpdate();
                        tblModelLoaiSP.getDataVector().removeAllElements();
                        loadDataLoaiSP();
                         btnResetActionPerformed(null);
                        JOptionPane.showMessageDialog(null, "Xóa loại sản phẩm thành công");
                    } catch (Exception e) {
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Xóa loại sản phẩm không thành công");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Sản phẩm còn tồn tại, không thể xóa");
            }
        } catch (SQLException ex) {
        }
        tblModelLoaiSP.getDataVector().removeAllElements();
        loadDataLoaiSP();
        
    }//GEN-LAST:event_bt_xoaActionPerformed

    private void bt_SuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_SuaActionPerformed
       JOptionPane.showConfirmDialog(null, "Bạn có muốn sửa loại sản phẩm không?");
        if (JOptionPane.YES_OPTION == 0) {
            try {
                String sql = "update qlqcf.loaisanpham set TenLSP=?, KichThuoc=? where MaLSP=?";
                psLoaiSP = conLoaiSP.prepareStatement(sql);
                psLoaiSP.setString(1, tf_tenlsp.getText());
                psLoaiSP.setString(2, (String) cb_kichthuoc.getSelectedItem());
                psLoaiSP.setString(3, tf_malsp.getText());
                psLoaiSP.executeUpdate();
                tblModelLoaiSP.getDataVector().removeAllElements();
                loadDataLoaiSP();
                btnResetActionPerformed(null);
                JOptionPane.showMessageDialog(null, "Sửa loại sản phẩm thành công");
                tblModelLoaiSP.getDataVector().removeAllElements();
                loadDataLoaiSP();
            } catch (Exception e) {
            }
        } else {
            JOptionPane.showMessageDialog(null, "Sửa loại sản phẩm không thành công");
        }
    }//GEN-LAST:event_bt_SuaActionPerformed

    private void bt_themspActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_themspActionPerformed
        int line = tblModelSP.getRowCount();
        int click = JOptionPane.showConfirmDialog(null, "Bạn có muốn thêm sản phẩm không?");
        if (click == 0) {
            try {
                psAdd1 = conLoaiSP.prepareStatement("select * from qlqcf.loaisanpham where TenLSP=? and KichThuoc=?");
                psAdd1.setString(1, (String) cb_tenlsp.getSelectedItem());
                psAdd1.setString(2, (String) cb_kichthuoc.getSelectedItem());
                rsAdd1 = psAdd1.executeQuery();
                if (rsAdd1.next()) {
                    while (true) {
                        for (int i = 0; i < line; i++) {
                            if (tf_masp.getText().trim().equals(tblModelSP.getValueAt(i, 0))) {
                                JOptionPane.showMessageDialog(this, "ID sản phẩm trùng");
                                tf_masp.grabFocus();
                                return;
                            }
                        }

                        if (tf_masp.getText().trim().equals("")) {
                            JOptionPane.showMessageDialog(this, "Mã không được để trống");
                            tf_masp.grabFocus();
                            return;
                        } else if (!tf_masp.getText().trim().matches("[A-Za-z]{2}\\d{2,2}")) {
                            JOptionPane.showMessageDialog(this, "Mã phải bắt đầu bằng 2 chữ và 2 số ");
                            tf_masp.grabFocus();
                            return;
                        } else {
                            break;
                        }
                    }

                    while (true) {
                        if (tf_tensp.getText().trim().equals("")) {
                            JOptionPane.showMessageDialog(this, "Tên không được để trống");
                            tf_tensp.grabFocus();
                            return;
                        } else {
                            break;
                        }
                    }
                    while (true) {
                        if (tf_giaban.getText().trim().equals("")) {
                            JOptionPane.showMessageDialog(this, "Giá không được để trống");
                            tf_giaban.grabFocus();
                            return;
                        } else if (!tf_giaban.getText().trim().matches("[0-9]+")) {
                            JOptionPane.showMessageDialog(this, "Giá phải là số và lớn hơn 0");
                            tf_giaban.grabFocus();
                            return;
                        } else if ((Integer.parseInt(tf_giaban.getText())) <= 0 || Integer.parseInt(tf_giaban.getText()) > 200000) {
                            JOptionPane.showMessageDialog(this, "Giá phải lớn hơn 0 và nhỏ hơn 200.000");
                            tf_giaban.grabFocus();
                            return;
                        } else {
                            break;
                        }
                    }
                    int line1 = j_sanpham.getRowCount();
                    while (true) {
                        String sql3 = "select * from qlqcf.loaisanpham where TenLSP=? and KichThuoc=?";
                        String Loaisp, Size, IDType;
                        psSP = conSP.prepareStatement(sql3);
                        psSP.setString(1, (String) cb_tenlsp.getSelectedItem());
                        psSP.setString(2, (String) cb_kichthuoc.getSelectedItem());
                        rsSP = psSP.executeQuery();
                        if (rsSP.next()) {
                            IDType = rsSP.getString(1);
                            for (int i = 0; i < line1; i++) {
                                if (tf_tensp.getText().equals(j_sanpham.getValueAt(i, 1)) && j_sanpham.getValueAt(i, 2).equals(IDType) && cb_kichthuoc.getSelectedItem().equals(j_sanpham.getValueAt(i, 4))) {
                                    JOptionPane.showMessageDialog(null, "Sản phẩm Đã tồn tại");
                                    return;
                                }
                            }
                            break;
                        }
                    }

                    String sql = "insert into qlqcf.sanpham values(?,?,?,?)";
                    psAdd2 = conSP.prepareStatement(sql);
                    psAdd2.setString(1, tf_masp.getText());
                    psAdd2.setString(2, tf_tensp.getText());
                    psAdd2.setString(3, rsAdd1.getString("MaLSP"));//cbBox
                    psAdd2.setInt(4, Integer.parseInt(tf_giaban.getText()));//kieu int
                    psAdd2.executeUpdate();
                    tblModelSP.getDataVector().removeAllElements();
                    loadDataSP();
                      btnResetActionPerformed(null);
                    JOptionPane.showMessageDialog(null, "Thêm sản phẩm thành công");
                } else {
                    JOptionPane.showMessageDialog(null, "Không tìm thấy loại sản phẩm.");
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        } 
    }//GEN-LAST:event_bt_themspActionPerformed

    private void bt_lmspActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_lmspActionPerformed
        tf_masp.setText("");
        tf_tensp.setText("");
        tf_giaban.setText("");
        cb_tenlsp.setSelectedIndex(0);
        cb_kichthuoc.setSelectedIndex(0);
         tf_masp.setEnabled(true);
        bt_Xoasp.setEnabled(false);
        bt_suasp.setEnabled(false);
        bt_themsp.setEnabled(true);
        cb_chontk.setSelectedIndex(0);
    }//GEN-LAST:event_bt_lmspActionPerformed

    private void bt_suaspActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_suaspActionPerformed
      int a = JOptionPane.showConfirmDialog(null, "Bạn có muốn sửa sản phẩm không?");
        if (a == 0) {

            try {
                String sql2 = "select * from qlqcf.loaisanpham where TenLSP=? and KichThuoc=?";
                psLoaiSP = conSP.prepareStatement(sql2);
                psLoaiSP.setString(1, (String) cb_tenlsp.getSelectedItem());
                psLoaiSP.setString(2, (String) cb_kichthuoc.getSelectedItem());
                rsLoaiSP = psLoaiSP.executeQuery();
                if (rsLoaiSP.next()) {
                    String sql = "update qlqcf.sanpham set TenSP=?, MaLSP=?, GíaSP=? where MaSP=?";
                    psSP = conSP.prepareStatement(sql);
                    psSP.setString(1, tf_tensp.getText());
                    psSP.setString(2, rsLoaiSP.getString(1));//cbBox
                    psSP.setInt(3, Integer.parseInt(tf_giaban.getText()));//kieu int
                    psSP.setString(4, tf_masp.getText());
                    psSP.executeUpdate();
                    tblModelSP.getDataVector().removeAllElements();
                    loadDataSP();
                    btnResetActionPerformed(null);
                    JOptionPane.showMessageDialog(null, "Sửa sản phẩm thành công");
                } else {
                    JOptionPane.showMessageDialog(null, "Không tìm thấy loại sản phẩm.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_bt_suaspActionPerformed

    private void bt_XoaspActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_XoaspActionPerformed
       int de = JOptionPane.showConfirmDialog(null, "Bạn có muốn xóa sản phẩm không?");
        if (de == 0) {
            try {
                String sql1 = "select * from qlqcf.chitietdathang where MaSP=?";
                psSP = conSP.prepareStatement(sql1);
                psSP.setString(1, tf_masp.getText());
                rsIDPr = psSP.executeQuery();
                if (rsIDPr.next()) {
                    JOptionPane.showMessageDialog(null, "Sản phẩm đã có đơn hàng, không thể xóa sản phẩm.");
                } else {
                    try {
                        String sql = "Delete qlqcf.sanpham where MaSP=?";
                        psSP = conSP.prepareStatement(sql);
                        psSP.setString(1, tf_masp.getText());
                        psSP.executeUpdate();
                        tblModelSP.getDataVector().removeAllElements();
                        loadDataSP();
                         btnResetActionPerformed(null);
                        JOptionPane.showMessageDialog(null, "Xóa sản phẩm thành công.");
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e);
                    }
                }
            } catch (SQLException e) {
            }

        }
    }//GEN-LAST:event_bt_XoaspActionPerformed

    private void cb_chontkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_chontkActionPerformed
      pannel_timkiem.setVisible(true);
        if (cb_chontk.getSelectedIndex() == 0) {
            cb_ten.setVisible(false);
            tf_giatu.setVisible(false);
            tf_giaden.setVisible(false);
            cb_loai.setVisible(false);
            cb_kichthuoc.setVisible(false);
            bt_tk.setVisible(false);
            lb_giaden.setVisible(false);
            lb_giatu.setVisible(false);
            lb_kt.setVisible(false);
            lb_nhom.setVisible(false);
            lb_vnd1.setVisible(false);
            lb_vnd.setVisible(false);

        } else if (cb_chontk.getSelectedItem().equals("Tên")) {
            cb_ten.setVisible(true);
            tf_giatu.setVisible(false);
            tf_giaden.setVisible(false);
            cb_loai.setVisible(false);
            cb_kichthuoc.setVisible(false);
            bt_tk.setVisible(true);
            lb_giaden.setVisible(false);
            lb_giatu.setVisible(false);
            lb_kt.setVisible(false);
            lb_nhom.setVisible(false);
            lb_vnd1.setVisible(false);
            lb_vnd.setVisible(false);
            
        lsTensp.add("CAPPUCCINO");
        lsTensp.add("Cam ép");
        lsTensp.add("Cà phê đá");
        lsTensp.add("Cà phê sửa đá");
        lsTensp.add("ESPRESSO MILK");
        lsTensp.add("Sinh tố thập cẩm");
        lsTensp.add("Trà đào");
        cb_ten.removeAllItems();
        for(String tensp:  lsTensp){
            cb_ten.addItem(tensp);
        }
        } else if (cb_chontk.getSelectedItem().equals("Giá")) {
            tf_giatu.setVisible(true);
            tf_giaden.setVisible(true);
            cb_ten.setVisible(false);
            cb_loai.setVisible(false);
            cb_kichthuoc.setVisible(false);
            cb_ten.setVisible(false);
            bt_tk.setVisible(true);

            lb_giaden.setVisible(true);
            lb_giatu.setVisible(true);
            lb_kt.setVisible(false);
            lb_nhom.setVisible(false);
            lb_vnd1.setVisible(true);
            lb_vnd.setVisible(true);
            
        } else if (cb_chontk.getSelectedItem().equals("Nhóm")) {
            tf_giatu.setVisible(false);
            tf_giaden.setVisible(false);
            cb_ten.setVisible(false);
            cb_loai.setVisible(true);
            cb_kichthuoc.setVisible(true);
            bt_tk.setVisible(true);
            lb_giaden.setVisible(false);
            lb_giatu.setVisible(false);
            lb_kt.setVisible(true);
            lb_nhom.setVisible(true);
            lb_vnd1.setVisible(false);
            lb_vnd.setVisible(false);
            
            cb_loai.removeAllItems();
            lsTenlsp.add("Cà phê");
            lsTenlsp.add("Nước trái cây");
            cb_loai.removeAllItems();
            for(String tenLsp: lsTenlsp){
            cb_loai.addItem(tenLsp);
        } 
        }
    }//GEN-LAST:event_cb_chontkActionPerformed

    private void bt_tkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_tkActionPerformed
        if (cb_chontk.getSelectedItem().equals("Tên")) {
            tblModelSP.getDataVector().removeAllElements();
            try {
                psTK = conSP.prepareStatement("select * from qlqcf.sanpham inner join loaisanpham on sanpham.MaLSP=loaisanpham.MaLSP where TenSP=?");
                psTK.setString(1, (String) cb_ten.getSelectedItem());
                rsTK = psTK.executeQuery();
                if (rsTK.next()) {
                    psTK = conSP.prepareStatement("select *from qlqcf.sanpham inner join loaisanpham on sanpham.MaLSP=loaisanpham.MaLSP where TenSP=?");
                    psTK.setString(1, (String) cb_ten.getSelectedItem());
                    rsTK = psTK.executeQuery();
                    while (rsTK.next()) {
                        rowTen = new Vector();
                        rowTen.add(rsTK.getString("MaSP"));
                        rowTen.add(rsTK.getString("TenSP"));
                        rowTen.add(rsTK.getString("MaLSP"));
                        rowTen.add(rsTK.getString("GíaSP"));
                        rowTen.add(rsTK.getString("KichThuoc"));
                        tblModelSP.addRow(rowTen);
                    }
                    j_sanpham.setModel(tblModelSP);
                } else {
                    JOptionPane.showMessageDialog(null, "Không tìm được sản phẩm");
                    loadDataSP();
                }
            } catch (Exception e) {
            }
        } else if (cb_chontk.getSelectedItem().equals("Giá")) {
            while (true) {
                if (tf_giatu.getText().trim().equals("")) {
                    JOptionPane.showMessageDialog(this, "Giá không được để trống");
                    tf_giatu.grabFocus();
                    return;
                } else if (!tf_giatu.getText().trim().matches("[0-9]+")) {
                    JOptionPane.showMessageDialog(this, "Giá phải là số");
                    tf_giatu.grabFocus();
                    return;
                } else if ((Integer.parseInt(tf_giatu.getText())) <= 0 || Integer.parseInt(tf_giatu.getText()) > 200000) {
                    JOptionPane.showMessageDialog(this, "Giá phải lớn hơn 0 và nhỏ hơn 200.000");
                    tf_giatu.grabFocus();
                    return;
                } else {
                    break;
                }
            }
            while (true) {
                if (tf_giaden.getText().trim().equals("")) {
                    JOptionPane.showMessageDialog(this, "Giá không được để trống");
                    tf_giaden.grabFocus();
                    return;
                } else if (!tf_giaden.getText().trim().matches("[0-9]+")) {
                    JOptionPane.showMessageDialog(this, "Giá phải là số");
                   tf_giaden.grabFocus();
                    return;
                } else if ((Integer.parseInt(tf_giaden.getText())) <= 0 || Integer.parseInt(tf_giaden.getText()) > 200000) {
                    JOptionPane.showMessageDialog(this, "Giá phải lớn hơn 0 và nhỏ hơn 200.000");
                    tf_giaban.grabFocus();
                    return;
                } else if ((Integer.parseInt(tf_giatu.getText())) >= Integer.parseInt(tf_giaden.getText())) {
                    JOptionPane.showMessageDialog(this, "Giá phải từ nhỏ đến lớn");
                    tf_giaden.grabFocus();
                    return;
                } else {
                    break;
                }
            }
            tblModelSP.getDataVector().removeAllElements();
            try {
                psTK = conSP.prepareStatement("select * from qlqcf.sanpham inner join loaisanpham on sanpham.MaLSP=loaisanpham.MaLSP where sanpham.GíaSP > ? and sanpham.GíaSP < ?");
                psTK.setInt(1, Integer.parseInt(tf_giatu.getText().trim()));
                psTK.setInt(2, Integer.parseInt(tf_giaden.getText().trim()));
                rsTK = psTK.executeQuery();
                if (rsTK.next()) {
                    psTK = conSP.prepareStatement("select * from qlqcf.sanpham inner join loaisanpham on sanpham.MaLSP=loaisanpham.MaLSP where sanpham.GíaSP > ? and sanpham.GíaSP < ?");
                    psTK.setInt(1, Integer.parseInt(tf_giatu.getText().trim()));
                    psTK.setInt(2, Integer.parseInt(tf_giaden.getText().trim()));
                    rsTK = psTK.executeQuery();
                    while (rsTK.next()) {
                        rowTen = new Vector();
                        rowTen.add(rsTK.getString("MaSP"));
                        rowTen.add(rsTK.getString("TenSP"));
                        rowTen.add(rsTK.getString("MaLSP"));
                        rowTen.add(rsTK.getString("GíaSP"));
                        rowTen.add(rsTK.getString("KichThuoc"));
                        tblModelSP.addRow(rowTen);
                    }
                    j_sanpham.setModel(tblModelSP);
                } else {
                    JOptionPane.showMessageDialog(null, "Không tìm được sản phẩm");
                    loadDataSP();
                }
            } catch (Exception e) {
            }
        } else if (cb_chontk.getSelectedItem().equals("Nhóm")) {
            tblModelSP.getDataVector().removeAllElements();
            try {
                psTK = conSP.prepareStatement("select * from qlqcf.sanpham inner join loaisanpham on sanpham.MaLSP=loaisanpham.MaLSP where TenLSP= ? and KichThuoc= ?");
                psTK.setString(1, (String) cb_loai.getSelectedItem());
                psTK.setString(2, (String) cb_kichthuoc.getSelectedItem());
                rsTK = psTK.executeQuery();
                if (rsTK.next()) {
                    psTK = conSP.prepareStatement("select * from qlqcf.sanpham inner join loaisanpham on sanpham.MaLSP=loaisanpham.MaLSP where TenLSP= ? and KichThuoc= ?");
                    psTK.setString(1, (String) cb_loai.getSelectedItem());
                    psTK.setString(2, (String) cb_kichthuoc.getSelectedItem());
                    rsTK = psTK.executeQuery();
                    while (rsTK.next()) {
                        rowTen = new Vector();
                        rowTen.add(rsTK.getString("MaSP"));
                        rowTen.add(rsTK.getString("TenSP"));
                        rowTen.add(rsTK.getString("MaLSP"));
                        rowTen.add(rsTK.getString("GíaSP"));
                        rowTen.add(rsTK.getString("KichThuoc"));
                        tblModelSP.addRow(rowTen);
                    }
                    j_sanpham.setModel(tblModelSP);
                } else {
                    JOptionPane.showMessageDialog(null, "Không tìm được sản phẩm");
                    loadDataSP();
                }
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_bt_tkActionPerformed

    private void j_sanphamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_j_sanphamMouseClicked
        String DepName = null;
        bt_Xoasp.setEnabled(true);
        bt_suasp.setEnabled(true);
        bt_themsp.setEnabled(false);
        int line = j_sanpham.getSelectedRow();
        String ID = (String) tblModelSP.getValueAt(line, 0);
        String Name = (String) tblModelSP.getValueAt(line, 1);
        String Type = (String) tblModelSP.getValueAt(line, 2);
        String Price = (String) tblModelSP.getValueAt(line, 3);
        String Size = (String) tblModelSP.getValueAt(line, 4);
        //gan du lieu vao textfile
        tf_masp.setText(ID);
        tf_tensp.setText(Name);
        try {
            String sql = "select * from qlqcf.loaisanpham where MaLSP=?";
            psSP = conSP.prepareStatement(sql);
            psSP.setString(1, Type);
            rsSP = psSP.executeQuery();
            if (rsSP.next()) {
                DepName = rsSP.getString(2);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        cb_tenlsp.setSelectedItem(DepName);
//        cbNameType.setSelectedItem(Type);
        tf_giaban.setText(Price);
        cb_kichthuoc.setSelectedItem(Size);
        tf_masp.setEnabled(false);
    }//GEN-LAST:event_j_sanphamMouseClicked

    private void j_lspMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_j_lspMouseClicked
        bt_xoa.setEnabled(true);
        bt_Sua.setEnabled(true);
        bt_luu.setEnabled(false);
        int line1 = j_lsp.getSelectedRow();
        String ID1 = (String) tblModelLoaiSP.getValueAt(line1, 0);
        String Name1 = (String) tblModelLoaiSP.getValueAt(line1, 1);
        String Size = (String) tblModelLoaiSP.getValueAt(line1, 2);
        tf_malsp.setText(ID1);
        tf_tenlsp.setText(Name1);
        cb_kichthuoc.setSelectedItem(Size);
        tf_malsp.setEnabled(false);
    }//GEN-LAST:event_j_lspMouseClicked
 private void btnResetActionPerformed(Object object) {
        tf_masp.setText("");
        tf_tensp.setText("");
        tf_giaban.setText("");
        cb_loai.setSelectedIndex(0);//re set combobox
        tf_masp.setEnabled(true);
        bt_Xoasp.setEnabled(false);
        bt_suasp.setEnabled(false);
        bt_themsp.setEnabled(true);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QLSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QLSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QLSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QLSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QLSanPham().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_Sua;
    private javax.swing.JButton bt_Xoasp;
    private javax.swing.JButton bt_lammoi;
    private javax.swing.JButton bt_lmsp;
    private javax.swing.JButton bt_luu;
    private javax.swing.JButton bt_suasp;
    private javax.swing.JButton bt_themsp;
    private javax.swing.JButton bt_tk;
    private javax.swing.JButton bt_xoa;
    private javax.swing.JComboBox<String> cb_chontk;
    private javax.swing.JComboBox<String> cb_kichthuoc;
    private javax.swing.JComboBox<String> cb_kthuoc;
    private javax.swing.JComboBox<String> cb_loai;
    private javax.swing.JComboBox<String> cb_ten;
    private javax.swing.JComboBox<String> cb_tenlsp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable j_lsp;
    private javax.swing.JTable j_sanpham;
    private javax.swing.JComboBox<String> jcb_kichthuoc;
    private javax.swing.JLabel lb_giaden;
    private javax.swing.JLabel lb_giatu;
    private javax.swing.JLabel lb_kt;
    private javax.swing.JLabel lb_nhom;
    private javax.swing.JLabel lb_vnd;
    private javax.swing.JLabel lb_vnd1;
    private javax.swing.JPanel pannel_timkiem;
    private javax.swing.JTextField tf_giaban;
    private javax.swing.JTextField tf_giaden;
    private javax.swing.JTextField tf_giatu;
    private javax.swing.JTextField tf_malsp;
    private javax.swing.JTextField tf_masp;
    private javax.swing.JTextField tf_tenlsp;
    private javax.swing.JTextField tf_tensp;
    // End of variables declaration//GEN-END:variables

    
}
